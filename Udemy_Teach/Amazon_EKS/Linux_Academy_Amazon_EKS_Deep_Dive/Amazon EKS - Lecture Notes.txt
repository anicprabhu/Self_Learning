Amazon EKS - Lecture Notes

======================================
Install kubectl
--------------------------------------
mkdir $HOME/bin
curl -o kubectl https://amazon-eks.s3-us-west-2.amazonaws.com/1.10.3/2018-07-26/bin/linux/amd64/kubectl
chmod +x ./kubectl
cp ./kubectl $HOME/bin/kubectl
export PATH=$HOME/bin:$PATH
echo 'export PATH=$HOME/bin:$PATH' >> ~/.bashrc
kubectl version --client
---
curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.16.8/2020-04-16/bin/linux/amd64/kubectl
chmod +x ./kubectl
mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
kubectl version --short --client
---

----------------------------------------
aws-iam-authenticator

mkdir $HOME/bin
curl -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.10.3/2018-07-26/bin/linux/amd64/aws-iam-authenticator
chmod +x ./aws-iam-authenticator
cp ./aws-iam-authenticator $HOME/bin
export PATH=$HOME/bin:$PATH
echo 'export PATH=$HOME/bin:$PATH' >> ~/.bashrc
aws-iam-authenticator help

---
curl -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.16.8/2020-04-16/bin/linux/amd64/aws-iam-authenticator

chmod +x ./aws-iam-authenticator

----------------------------------------
AWS CLI
---
curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
sudo ./aws/install
export PATH=$HOME/.local/bin:$PATH --Need To Correct
echo 'export PATH=$HOME/.local/bin:$PATH' >> ~/.bashrc --Need To Corect
---
curl -O https://bootstrap.pypa.io/get-pip.py
python get-pip.py --user
pip install awscli --upgrade --user
export PATH=$HOME/.local/bin:$PATH
echo 'export PATH=$HOME/.local/bin:$PATH' >> ~/.bashrc
---
Create Access Keys from IAM -> Users -> Security Credentials
---
aws configure
aws eks update-kubeconfig --name <clustername>
kubectl config view
kubectl get svc

kubectl cluster-info

=============================================

AKIA3LJOXUANXUH42QNX  

HBnYKqXiQm8SMhh2qVA5M4Hc5c/uGk9o/9QC3li7

=========================================

Worker Nodes


https://amazon-eks.s3-us-west-2.amazonaws.com/cloudformation/2018-11-07/amazon-eks-nodegroup.yaml


curl -O https://amazon-eks.s3-us-west-2.amazonaws.com/cloudformation/2018-11-07/aws-auth-cm.yaml
# Edit aws-auth-cm.yaml, set Node Instance Role ARN
kubectl apply -f aws-auth-cm.yaml
kubectl get nodes --watch

==================================

Deploy the Kubernetes Dashboard:

kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v1.10.1/src/deploy/recommended/kubernetes-dashboard.yaml
kubectl proxy &


Deploy Heapster and Inf luxDB:
kubectl apply -f https://raw.githubusercontent.com/kubernetes/heapster/master/deploy/kube-config/influxdb/heapster.yaml
kubectl apply -f https://raw.githubusercontent.com/kubernetes/heapster/master/deploy/kube-config/influxdb/influxdb.yaml
kubectl apply -f https://raw.githubusercontent.com/kubernetes/heapster/master/deploy/kube-config/rbac/heapster-rbac.yaml


==================================

https://github.com/linuxacademy/eks-deep-dive-2019/tree/master/1-3-Provisioning-Worker-Nodes

==============Install EKS via eksctl=====================
sudo yum update -y

aws --version

curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" 
unzip awscliv2.zip
sudo ./aws/install

export PATH=$PATH:/usr/local/bin/aws

curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.16.8/2020-04-16/bin/linux/amd64/kubectl
chmod +x ./kubectl
mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
kubectl version --short --client

curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
sudo mv /tmp/eksctl /usr/local/bin
eksctl version

---
IAM -> Users -> Security Credentials -> AKIASKJC5VEPIPKJMQBR     YVlEElMW+HpgeV8uNwEGvwPdab2hBG/XpShO25me

										AKIA2SWXSJVES5SSSX6X 	9VD4Tijpy37GOiuNPit8SjCZx757/K2jJ8w3Uri5

aws configure
---

curl http://169.254.169.254/latest/meta-data/public-keys/0/openssh-key >> token.pub

eksctl create cluster \
--name eksctlCluster \
--version 1.16 \
--region us-east-1 \
--nodegroup-name standard-workers \
--node-type t3.medium \
--nodes 3 \
--nodes-min 1 \
--nodes-max 4 \
--ssh-access \
--ssh-public-key token.pub \
--managed


======================SANITY Steps============

sudo yum install git

git clone https://github.com/linuxacademy/eks-deep-dive-2019.git

cd eks-deep-dive-2019/2-LA1-Deploying-an-Application-to-EKS/

kubectl apply -f .

kubectl get svc

curl <ExternalIP> or 

====================================================
Monitoring

Install helm

	curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 > get_helm.sh

	chmod +x get_helm.sh

	./get_helm.sh

Add the Repo

	helm repo add stable https://kubernetes-charts.storage.googleapis.com/

	helm search repo stable

Install Prometheus


	vi prometheus-values.yaml
		externalIPs: []
		servicePort: 80
	    nodePort: 30900
	    type: NodePort

	helm install -f prometheus-values.yaml stable/prometheus --generate-name

	kubectl get pods

	update the security group of one of the nodes to allos the inboud rule for the NodePort

	http://3.94.134.153:30900/targets

Install Graphana

	helm install -f grafana-values.yaml stable/grafana --generate-name


	Dashboard ID
	Node Dashboard
	3131

	Pod Dashboard
	3146


=================================================





